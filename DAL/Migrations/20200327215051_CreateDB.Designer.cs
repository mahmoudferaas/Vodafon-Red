// <auto-generated />
using System;
using DAL.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(RedDbContext))]
    [Migration("20200327215051_CreateDB")]
    partial class CreateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Entities.Number", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsChoosen");

                    b.Property<bool?>("IsPrivate");

                    b.Property<string>("No");

                    b.Property<string>("UserId");

                    b.HasKey("ID");

                    b.ToTable("Numbers");
                });

            modelBuilder.Entity("DAL.Entities.Package", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("Units");

                    b.HasKey("ID");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("DAL.Entities.Sale", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActivationDate");

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("District");

                    b.Property<string>("Mobile1");

                    b.Property<string>("Mobile2");

                    b.Property<int?>("NumberID");

                    b.Property<int?>("PackageID");

                    b.Property<DateTime?>("RejectDate");

                    b.Property<long>("Serial");

                    b.Property<int?>("StatusID");

                    b.Property<string>("UserId");

                    b.Property<DateTime?>("VisitDate");

                    b.HasKey("ID");

                    b.HasIndex("NumberID");

                    b.HasIndex("PackageID");

                    b.HasIndex("StatusID");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("DAL.Entities.Status", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("DAL.Entities.Vendor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicName");

                    b.Property<string>("City");

                    b.Property<string>("EnglishName");

                    b.Property<string>("Mobile");

                    b.HasKey("ID");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("DAL.Entities.Sale", b =>
                {
                    b.HasOne("DAL.Entities.Number", "Number")
                        .WithMany("Sales")
                        .HasForeignKey("NumberID");

                    b.HasOne("DAL.Entities.Package", "Package")
                        .WithMany("Sales")
                        .HasForeignKey("PackageID");

                    b.HasOne("DAL.Entities.Status", "Status")
                        .WithMany("Sales")
                        .HasForeignKey("StatusID");
                });
#pragma warning restore 612, 618
        }
    }
}
